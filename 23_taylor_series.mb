{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Dubenlaylay1/FarizChalovMath-2024-25-Winter/blob/main/23_taylor_series.mb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dUb_ekTOCx-A"
      },
      "source": [
        "## 23. Taylor Series\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true,
          "base_uri": "https://localhost:8080/"
        },
        "id": "aB9ijP6cCw6o",
        "outputId": "ca00a150-0c25-4a3a-8789-94e93a97107b"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "cos(0.5) ≈ 0.8775825621589781\n"
          ]
        }
      ],
      "source": [
        "import math\n",
        "\n",
        "def taylor_series_cos(x, n):\n",
        "    \"\"\"\n",
        "    Calculate the Taylor series of cos(x) up to the nth degree.\n",
        "    Parameters:\n",
        "    x (float): The point at which to evaluate the series.\n",
        "    n (int): The degree of the Taylor series.\n",
        "    Returns:\n",
        "    float: The approximated value of cos(x).\n",
        "    \"\"\"\n",
        "    taylor_sum = 0\n",
        "    for i in range(n + 1):\n",
        "        # Taylor series coefficient for cos(x)\n",
        "        coefficient = ((-1) ** i) / math.factorial(2 * i)\n",
        "        # Taylor series term\n",
        "        term = coefficient * (x ** (2 * i))\n",
        "        taylor_sum += term\n",
        "    return taylor_sum\n",
        "\n",
        "# Example Usage\n",
        "degree = 4  # Taylor series up to the 4th degree\n",
        "x_value = 0.5  # The value at which we want to approximate cos(x)\n",
        "\n",
        "# Calculate the Taylor series approximation\n",
        "taylor_result = taylor_series_cos(x_value, degree)\n",
        "\n",
        "print(f\"cos({x_value}) ≈ {taylor_result}\")\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ulTIdGeRZ2HO"
      },
      "source": [
        "## Taylor Series at x = 0\n",
        "\n",
        "A function \\( f(x) \\) at point \\( x = 0 \\) can be expressed using the Taylor series as follows:\n",
        "\n",
        "\n",
        "\n",
        "$ f(x) = f(0) + f'(0)(x-0) + \\frac{f''(0)}{2!}(x-0)^2 + \\frac{f'''(0)}{3!}(x-0)^3 + \\ldots $\n",
        "\n",
        "\n",
        "\n",
        "Where:\n",
        "- \\( f(0) \\) is the value of the function at \\( x = 0 \\).\n",
        "- \\( f'(0) \\) is the first derivative of the function at \\( x = 0 \\).\n",
        "- \\( f''(0) \\) is the second derivative of the function at \\( x = 0 \\).\n",
        "- \\( f'''(0) \\) is the third derivative of the function at \\( x = 0 \\).\n",
        "- And so on.\n",
        "\n",
        "### Finding the Taylor Series for  cos(x) \\:\n",
        "\n",
        "**Step 1: Calculate the Derivatives**\n",
        "\n",
        "\n",
        "\n",
        "\\[ f(x) = cos(x) \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ f'(x) = -sin(x) \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ f''(x) = -cos(x) \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ f'''(x) = sin(x) \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ f''''(x) = cos(x) \\]\n",
        "\n",
        "\n",
        "\n",
        "**Step 2: Calculate the Values at \\( x = 0 \\)**\n",
        "\n",
        "\n",
        "\n",
        "\\[ f(0) = cos(0) = 1 \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ f'(0) = -sin(0) = 0 \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ f''(0) = -cos(0) = -1 \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ f'''(0) = sin(0) = 0 \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ f''''(0) = cos(0) = 1 \\]\n",
        "\n",
        "\n",
        "\n",
        "**Step 3: Write the Taylor Series**\n",
        "\n",
        "\n",
        "\n",
        "$ \\cos(x) = 1 + 0(x-0) + \\frac{-1}{2!}(x-0)^2 + 0(x-0)^3 + \\frac{1}{4!}(x-0)^4 + \\ldots $\n",
        "\n",
        "\n",
        "\n",
        "Simplified, this becomes:\n",
        "\n",
        "\n",
        "\n",
        "$ \\cos(x) = 1 - \\frac{x^2}{2!} + \\frac{x^4}{4!} + \\ldots $\n",
        "\n",
        "\n",
        "\n",
        "This is the Taylor series for the function \\( cos(x) \\) around \\( x = 0 \\) up to the fourth degree.\n",
        "\n",
        "[GeoGebra Taylor Series Graph](https://www.geogebra.org/calculator/vvjxytwg)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ubO6cuUwZ54b",
        "outputId": "ec7ade3a-db93-4345-b93d-3c41228f2c4b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "h(0.5) ≈ 1.9375\n"
          ]
        }
      ],
      "source": [
        "import math\n",
        "\n",
        "def taylor_series_h(x, n):\n",
        "    \"\"\"\n",
        "    Calculate the Taylor series of 1/(1-x) up to the nth degree.\n",
        "    Parameters:\n",
        "    x (float): The point at which to evaluate the series.\n",
        "    n (int): The degree of the Taylor series.\n",
        "    Returns:\n",
        "    float: The approximated value of h(x).\n",
        "    \"\"\"\n",
        "    taylor_sum = 0\n",
        "    for i in range(n + 1):\n",
        "        # Taylor series term for 1/(1-x)\n",
        "        term = (x ** i)\n",
        "        taylor_sum += term\n",
        "    return taylor_sum\n",
        "\n",
        "# Example Usage\n",
        "degree = 4  # Taylor series up to the 4th degree\n",
        "x_value = 0.5  # The value at which we want to approximate h(x)\n",
        "\n",
        "# Calculate the Taylor series approximation\n",
        "taylor_result = taylor_series_h(x_value, degree)\n",
        "\n",
        "print(f\"h({x_value}) ≈ {taylor_result}\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6plwEVtDlZ_P"
      },
      "source": [
        "## Finding the Taylor Series of  $ h(x) = \\frac{1}{1-x} $\n",
        "\n",
        "### Step 1: Calculate the Derivatives\n",
        "\n",
        "\n",
        "\n",
        "\\[ $ h'(x) = \\frac{1}{(1-x)^2} $ \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ $ h''(x) = \\frac{2}{(1-x)^3} $ \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ $ h'''(x) = \\frac{6}{(1-x)^4} $ \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ $ h''''(x) = \\frac{24}{(1-x)^5} $ \\]\n",
        "\n",
        "\n",
        "\n",
        "### Step 2: Calculate the Values at \\( x = 0 \\)\n",
        "\n",
        "\n",
        "\n",
        "\\[ h(0) = 1 \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ h'(0) = 1 \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ h''(0) = 2 \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ h'''(0) = 6 \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ h''''(0) = 24 \\]\n",
        "\n",
        "\n",
        "\n",
        "### Step 3: Substitute into the Taylor Series Formula\n",
        "\n",
        "\n",
        "\n",
        "\\[ $ h(x) = h(0) + h'(0)x + \\frac{h''(0)}{2!}x^2 + \\frac{h'''(0)}{3!}x^3 + \\frac{h''''(0)}{4!}x^4 $ \\]\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\\[ $ h(x) = 1 + x + x^2 + x^3 + x^4 $ \\]\n",
        "\n",
        "\n",
        "\n",
        "### Result\n",
        "\n",
        "The Taylor series expansion of the function \\( $ h(x) = \\frac{1}{1-x} $ \\) around \\( x = 0 \\) up to the 4th degree is:\n",
        "\n",
        "\n",
        "\n",
        "\\[ $ h(x) = 1 + x + x^2 + x^3 + x^4 $ \\]\n",
        "\n",
        "\n",
        "\n",
        "This means that for values of \\( x \\) near \\( 0 \\), the function \\( h(x) \\) can be well-approximated by this polynomial.\n",
        "\n",
        "### Important Notes\n",
        "\n",
        "- This expansion is only valid for values of \\( x \\) close to \\( 0 \\). As \\( x \\) moves further away, the error increases.\n",
        "- The Taylor series is an infinite sum. Here, we have only taken the first few terms for an approximation. More terms would give a more accurate result.\n",
        "- Such expansions are commonly used in many mathematical and physical problems, such as summing geometric series and solving differential equations.\n",
        "\n",
        "### Summary\n",
        "\n",
        "The given expression shows how the function \\( $ \\frac{1}{1-x} $ \\) can be expressed as a polynomial around \\( x = 0 \\). This allows us to transform a seemingly complex function into a simpler form.\n",
        "\n",
        "[GeoGebra Taylor Series Graph](https://www.geogebra.org/calculator/vt2nk6fc)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8LE7dwgZlatX"
      },
      "outputs": [],
      "source": [
        "import math\n",
        "\n",
        "def taylor_series_sin(x):\n",
        "    # x=π noktası çevresinde Taylor serisi için (x - π) terimini hesapla\n",
        "    delta = x - math.pi\n",
        "\n",
        "    # Taylor serisinin 4. dereceye kadar açılımı\n",
        "    result = -delta + (1 / math.factorial(3)) * (delta ** 3)\n",
        "\n",
        "    return result\n",
        "\n",
        "# Örnek kullanım:\n",
        "# Bir x değeri için Taylor serisini hesapla (örneğin, x=3.14)\n",
        "x_value = 3.14\n",
        "taylor_approximation = taylor_series_sin(x_value)\n",
        "\n",
        "# Sonucu yazdır\n",
        "print(f\"x = {x_value} için sin(x) Taylor serisi yaklaşıklaması: {taylor_approximation}\")\n",
        "\n",
        "# Gerçek sin(x) değeriyle karşılaştır\n",
        "real_value = math.sin(x_value)\n",
        "print(f\"Gerçek sin(x) değeri: {real_value}\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "J0uFIlArmTuM"
      },
      "source": [
        "## Finding the Taylor Series of  g(x) = sin(x)\n",
        "\n",
        "### Step 1: Calculate the Derivatives\n",
        "\n",
        "\n",
        "\n",
        " g'(x) = cos(x)\n",
        "\n",
        "\n",
        "\n",
        "\n",
        " g''(x) = -sin(x)\n",
        "\n",
        "\n",
        "\n",
        "\n",
        " g'''(x) = -cos(x)\n",
        "\n",
        "\n",
        "\n",
        "\n",
        " g''''(x) = sin(x)\n",
        "\n",
        "\n",
        "\n",
        "### Step 2: Calculate the Values at \\( x = $ \\pi $ \\)\n",
        "\n",
        "\n",
        "\n",
        " g($\\pi$) = sin($\\pi$) = 0\n",
        "\n",
        "\n",
        "\n",
        "\n",
        " g'(π) = cos(π) = -1\n",
        "\n",
        "\n",
        "\n",
        "\n",
        " g''(π) = -sin(π) = 0\n",
        "\n",
        "\n",
        "\n",
        "\n",
        " g'''(π) = -cos(π) = 1\n",
        "\n",
        "\n",
        "\n",
        "\n",
        " g''''(π) = \\sin(π) = 0\n",
        "\n",
        "\n",
        "\n",
        "### Step 3: Substitute into the Taylor Series Formula\n",
        "\n",
        "\n",
        "\n",
        "$ g(x) = g(π) + g'(π)(x-π) + \\frac{g''(π)}{2!}(x-π)^2 + \\frac{g'''(π)}{3!}(x-π)^3 + \\frac{g''''(π)}{4!}(x-π)^4 $\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "$ g(x) = -(x-π) + \\frac{(x-π)^3}{3!} $\n",
        "\n",
        "\n",
        "\n",
        "### Result\n",
        "\n",
        "The Taylor series expansion of the function \\( g(x) = \\sin(x) \\) around \\( x = $ \\pi $\\) up to the 4th degree is:\n",
        "\n",
        "\n",
        "\n",
        "$ g(x) = -(x-π) + \\frac{(x-π)^3}{3!} $\n",
        "\n",
        "\n",
        "\n",
        "This means that for values of \\( x \\) near \\( $\\pi$ \\), the function \\( sin(x) \\) can be well-approximated by this polynomial.\n",
        "\n",
        "[GeoGebra Taylor Series Graph](https://www.geogebra.org/calculator/pd8jzw66)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2Ce1TOS2m5CW",
        "outputId": "f6c8ae5c-9868-426d-cc82-1275a35c6e08"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Function f(x): exp(sin(x))\n",
            "Derivative f'(x): exp(sin(x))*cos(x)\n",
            "f(x0) (x0 = pi): 1\n",
            "f'(x0) (x0 = pi): -1\n",
            "Tangent line at x0 = pi: -x + 1 + pi\n",
            "GeoGebra tangent line (general form): (-s + x)*exp(sin(s))*cos(s) + exp(sin(s))\n"
          ]
        }
      ],
      "source": [
        "import sympy as sp\n",
        "\n",
        "# Define the symbol and function\n",
        "x = sp.symbols('x')\n",
        "f = sp.exp(sp.sin(x))  # f(x) = e^{sin(x)}\n",
        "\n",
        "# Compute the derivative\n",
        "f_prime = sp.diff(f, x)  # f'(x)\n",
        "\n",
        "# Point of tangency\n",
        "x0 = sp.pi\n",
        "f_x0 = f.subs(x, x0)       # f(x0) at x0 = pi\n",
        "f_prime_x0 = f_prime.subs(x, x0)  # f'(x0) at x0 = pi\n",
        "\n",
        "# Tangent line equation at x0\n",
        "tangent_line = f_prime_x0 * (x - x0) + f_x0\n",
        "\n",
        "# General tangent line for GeoGebra visualization\n",
        "def geogebra_tangent_line(s):\n",
        "    return f_prime.subs(x, s) * (x - s) + f.subs(x, s)\n",
        "\n",
        "# Example usage for GeoGebra\n",
        "gg_s = sp.symbols('s')\n",
        "geogebra_line = geogebra_tangent_line(gg_s)\n",
        "\n",
        "# Print results\n",
        "print(\"Function f(x):\", f)\n",
        "print(\"Derivative f'(x):\", f_prime)\n",
        "print(\"f(x0) (x0 = pi):\", f_x0)\n",
        "print(\"f'(x0) (x0 = pi):\", f_prime_x0)\n",
        "print(\"Tangent line at x0 = pi:\", tangent_line)\n",
        "print(\"GeoGebra tangent line (general form):\", geogebra_line)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "F1c4UNkRrYqM"
      },
      "source": [
        "### Problem Solution: Tangent Line to the Function\n",
        "\n",
        "We aim to find the tangent line to the function $ f(x) = e^{\\sin(x)} $ at a specific point $ x_0 = $ π $ $. The steps are outlined below:\n",
        "\n",
        "---\n",
        "\n",
        "### Step 1: Define the Function\n",
        "The function is given as:\n",
        "$\n",
        "    f(x) = e^{\\sin(x)}\n",
        "$\n",
        "This represents an exponential function where the exponent is the sine of \\( x \\).\n",
        "\n",
        "---\n",
        "\n",
        "### Step 2: Compute the Derivative\n",
        "The derivative \\( f'(x) \\) is calculated using the chain rule:\n",
        "$\n",
        "    f'(x) = \\cos(x) \\cdot e^{\\sin(x)}\n",
        "$\n",
        "This represents the rate of change of the function \\( f(x) \\) at any point \\( x \\).\n",
        "\n",
        "---\n",
        "\n",
        "### Step 3: Evaluate \\( f(x) \\) and \\( f'(x) \\) at \\( $ x_0 = \\pi $\\)\n",
        "To find the tangent line at \\( $ x_0 = \\pi $\\), we need the value of the function \\( f(x_0) \\) and its derivative \\( f'(x_0) \\):\n",
        "\n",
        "1. Evaluate \\($ f(\\pi) $\\):\n",
        "$\n",
        "    f(\\pi) = e^{\\sin(\\pi)} = e^0 = 1\n",
        "$\n",
        "2. Evaluate \\($ f'(\\pi) $\\):\n",
        "$\n",
        "    f'(\\pi) = \\cos(\\pi) \\cdot e^{\\sin(\\pi)} = (-1) \\cdot e^0 = -1\n",
        "$\n",
        "\n",
        "---\n",
        "\n",
        "### Step 4: Derive the Tangent Line Equation\n",
        "The general equation of a tangent line is:\n",
        "$\n",
        "    y = f'(x_0)(x - x_0) + f(x_0)\n",
        "$\n",
        "Substituting the values \\($ f'(x_0) = -1 $\\) and \\($ f(x_0) = 1 $\\):\n",
        "$\n",
        "    y = -1 \\cdot (x - \\pi) + 1\n",
        "$\n",
        "Simplify:\n",
        "$\n",
        "    y = -x + \\pi + 1\n",
        "$\n",
        "\n",
        "---\n",
        "\n",
        "### Step 5: Generalize the Tangent Line for GeoGebra\n",
        "To create a dynamic tangent line visualization in GeoGebra, we generalize the tangent line equation by replacing \\($ x_0 $\\) with a variable \\( s \\):\n",
        "$\n",
        "    y = f'(s)(x - s) + f(s)\n",
        "$\n",
        "This allows visualization of the tangent line at any point \\( s \\) along the curve.\n",
        "\n",
        "---\n",
        "\n",
        "### Step 6: Summary of Results\n",
        "1. **Function Definition:**\n",
        "   \\($ f(x) = e^{\\sin(x)} $\\)\n",
        "2. **Derivative:**\n",
        "   \\($ f'(x) = \\cos(x) \\cdot e^{\\sin(x)} $\\)\n",
        "3. **Evaluations at \\($ x_0 = \\pi $\\):**\n",
        "   - \\($ f(\\pi) = 1 $\\)\n",
        "   - \\($ f'(\\pi) = -1 $\\)\n",
        "4. **Tangent Line Equation:**\n",
        "   \\($ y = -x + \\pi + 1 $\\)\n",
        "5. **GeoGebra General Tangent Line:**\n",
        "   \\($ y = f'(s)(x - s) + f(s) $\\)\n",
        "\n",
        "---\n",
        "\n",
        "This comprehensive solution demonstrates the mathematical process for calculating the tangent line to a function at a specific point, as well as generalizing it for visualization purposes.\n",
        "[GeoGebra Taylor Series Graph](https://www.geogebra.org/calculator/kxc5gqrb)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "pkyLkPvErbIQ"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "name": "23-taylor-series.mb",
      "authorship_tag": "ABX9TyMyx+t1PiN1Y4g0iRZ8Jy3s",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}